<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
  /**
   * Ошибки при валидации формы
   */
  // Неверно заполнена форма. Текст будет дописан в json-формате
  const CODE_8001 = '8001;';

  /**
   * A list of the exception types that are not reported.
   *
   * @var array
   */
  protected $dontReport = [
    //
  ];

  /**
   * A list of the inputs that are never flashed for validation exceptions.
   *
   * @var array
   */
  protected $dontFlash = [
    'password',
    'password_confirmation',
  ];

  /**
   * Register the exception handling callbacks for the application.
   *
   * @return void
   */
  public function register()
  {
    $this->reportable(function(Throwable $e) {
      //
    });
  }

  public function render($request, Throwable $e)
  {
    // Кастомные exception будут возвращаться в json формате
    $tmpArr = explode(';', $e->getMessage());
    $numCode = reset($tmpArr);
    if(is_numeric($numCode)) {
      $code = $numCode;
      $message = array_pop($tmpArr);

      if($request->getMethod() === 'GET') {
        return response()->view('layouts.Elements.exception', ['code' => $code, 'message' => json_decode($message, true)]);
      }

      return response()->json(['code' => $code, 'message' => $message], 200);
    }

    return parent::render($request, $e); // TODO: Change the autogenerated stub
  }
}
